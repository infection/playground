{"stats":{"totalMutantsCount":9,"killedCount":3,"notTestedCount":0,"escapedCount":6,"errorCount":0,"timeOutCount":0,"msi":33.33,"mutationCodeCoverage":100,"coveredCodeMsi":33.33},"escaped":[{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [2, 2][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [2, 2][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 73 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"},{"mutator":{"mutatorName":"OneZeroInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [0, 2][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [0, 2][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 73 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 1][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [1, 1][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 77 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"},{"mutator":{"mutatorName":"IncrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 3][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [1, 3][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 70 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"},{"mutator":{"mutatorName":"ArrayItemRemoval","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [2][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [2][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 72 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"},{"mutator":{"mutatorName":"OneZeroInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][1];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [1, 2][1];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 \/ 1 (100%)\n\nTime: 80 ms, Memory: 10.00 MB\n\nOK (1 test, 1 assertion)"}],"timeouted":[],"killed":[{"mutator":{"mutatorName":"PublicVisibility","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    protected function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":9},"diff":"--- Original\n+++ New\n@@ @@\n \n class SourceClass\n {\n-    public function add(int $a, int $b) : int\n+    protected function add(int $a, int $b) : int\n     {\n         [1, 2][0];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\nE                                                                   1 \/ 1 (100%)\n\nTime: 68 ms, Memory: 10.00 MB\n\nThere was 1 error:\n\n1) Infected\\SourceClassTest::test_it_adds_2_numbers\nError: Call to protected method Infected\\SourceClass::add() from context 'Infected\\SourceClassTest'\n\n\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/tests\/SourceClassTest.php:16\n\nERRORS!\nTests: 1, Assertions: 0, Errors: 1."},{"mutator":{"mutatorName":"DecrementInteger","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][-1];\n        return $a + $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":11},"diff":"--- Original\n+++ New\n@@ @@\n {\n     public function add(int $a, int $b) : int\n     {\n-        [1, 2][0];\n+        [1, 2][-1];\n         return $a + $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\nE                                                                   1 \/ 1 (100%)\n\nTime: 71 ms, Memory: 10.00 MB\n\nThere was 1 error:\n\n1) Infected\\SourceClassTest::test_it_adds_2_numbers\nUndefined offset: -1\n\n\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php:10\n\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/tests\/SourceClassTest.php:16\n\nERRORS!\nTests: 1, Assertions: 0, Errors: 1."},{"mutator":{"mutatorName":"Plus","originalSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a + $b;\n    }\n}","mutatedSourceCode":"<?php\n\ndeclare (strict_types=1);\nnamespace Infected;\n\nclass SourceClass\n{\n    public function add(int $a, int $b) : int\n    {\n        [1, 2][0];\n        return $a - $b;\n    }\n}","originalFilePath":"\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/src\/SourceClass.php","originalStartLine":13},"diff":"--- Original\n+++ New\n@@ @@\n     public function add(int $a, int $b) : int\n     {\n         [1, 2][0];\n-        return $a + $b;\n+        return $a - $b;\n     }\n }","processOutput":"PHPUnit 8.2.4 by Sebastian Bergmann and contributors.\n\nF                                                                   1 \/ 1 (100%)\n\nTime: 67 ms, Memory: 10.00 MB\n\nThere was 1 failure:\n\n1) Infected\\SourceClassTest::test_it_adds_2_numbers\nFailed asserting that -1 is identical to 3.\n\n\/Users\/maksrafalko\/sites\/infection-playground\/app\/infection-builds\/zkx\/tests\/SourceClassTest.php:18\n\nFAILURES!\nTests: 1, Assertions: 1, Failures: 1."}],"errored":[],"uncovered":[]}
